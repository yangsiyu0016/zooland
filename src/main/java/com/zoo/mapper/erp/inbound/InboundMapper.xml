<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zoo.mapper.erp.inbound.InboundMapper">
	<resultMap type="com.zoo.model.erp.inbound.Inbound" id="BaseResultMap">
		<id column="id" property="id"/>
		<result column="foreignKey" property="foreignKey"/>
		<result column="type" property="type"/>
		<association column="cuserId"   property="cuser" select="com.zoo.mapper.system.user.SystemUserMapper.getUserById"></association>
		<association column="warehouseId"   property="warehouse" select="com.zoo.mapper.erp.warehouse.WarehouseMapper.getWarehouseById"></association>
		<collection column="id" property="details" select="com.zoo.mapper.erp.inbound.InboundDetailMapper.getDetailByInboundId"></collection>
	</resultMap>
	<insert id="addInbound">
		insert into inbound (
			id,
			code,
			foreignKey,
			cuserId,
			warehouseId,
			ctime,
			type,
			costId
		)values(
			#{inbound.id},
			#{inbound.code},
			#{inbound.foreignKey},
			#{inbound.cuserId},
			#{inbound.warehouse.id},
			#{inbound.ctime},
			#{inbound.type},
			#{inbound.cost.id}
		)
	</insert>
	<select id="getInboundByPage" resultMap="BaseResultMap">
		select 
			distinct i.* 
		from
			inbound i 
		left join inbound_detail id on i.id = id.inboundId	
		left join product p on id.productId = p.id 
		where 1 = 1 
		<if test="keywords != null and keywords != '' ">
			and (i.code like concat('%', #{keywords}, '%') or p.code like concat('%', #{keywords}, '%') or p.name like concat('%', #{keywords}, '%')) 
		</if>
		<if test="code != null and code != '' ">
			and i.code like concat('%', #{code}, '%') 
		</if>
		<if test="productCode != null and productCode != '' ">
			and p.code like concat('%', #{productCode}, '%') 
		</if>
		<if test="productName != null and productName != '' ">
			and p.name like concat('%', #{productName}, '%') 
		</if>
		<if test="type != null and type != '' ">
			and i.type = #{type}
		</if>
		<if test="warehouseId != null and warehouseId != '' ">
			and i.warehouseId = #{warehouseId}
		</if>
		<if test="start_time != null and start_time != '' ">
			and i.ctime &gt;= #{start_time}
		</if>
		<if test="end_time != null and end_time != '' ">
			and i.ctime &lt;= #{end_time}
		</if>
		order by ${sort} ${order}
		<if test="start != null and size != null">
			limit #{start}, #{size}
		</if>
	</select>
	<select id="getTotleCount" resultType="long">
		select 
			count(distinct i.id) count 
		from
			inbound i 
		left join inbound_detail id on i.id = id.inboundId	
		left join product p on id.productId = p.id 
		where 1 = 1 
		<if test="keywords != null and keywords != '' ">
			and (i.code like concat('%', #{keywords}, '%') or p.code like concat('%', #{keywords}, '%') or p.name like concat('%', #{keywords}, '%')) 
		</if>
		<if test="code != null and code != '' ">
			and i.code like concat('%', #{code}, '%') 
		</if>
		<if test="productCode != null and productCode != '' ">
			and p.code like concat('%', #{productCode}, '%') 
		</if>
		<if test="productName != null and productName != '' ">
			and p.name like concat('%', #{productName}, '%') 
		</if>
		<if test="type != null and type != '' ">
			and i.type = #{type}
		</if>
		<if test="warehouseId != null and warehouseId != '' ">
			and i.warehouseId = #{warehouseId}
		</if>
		<if test="start_time != null and start_time != '' ">
			and i.ctime &gt;= #{start_time}
		</if>
		<if test="end_time != null and end_time != '' ">
			and i.ctime &lt;= #{end_time}
		</if>
	</select>
	<select id="getInboundByForeignKey" resultMap="BaseResultMap">
		select * from inbound where foreignKey=#{foreignKey}
	</select>
	<select id="getDetailCount" resultType="long">
		select count(*) from inbound_detail where inboundId=#{id}
	</select>
	<delete id="deleteInboundByForeignKey">
		delete from inbound where foreignKey=#{foreignKey}
	</delete>
	<select id="getInboundById" resultMap="BaseResultMap">
		select * from inbound where id = #{id}
	</select>
	<delete id="deleteById">
		delete from inbound where id=#{id}
	</delete>
</mapper>