<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zoo.mapper.erp.sell.SellMapper">
	<resultMap type="com.zoo.model.erp.sell.Sell" id="BaseResultMap">
		<id column="id" property="id"/>
		<result column="code" property="code"/>
		<result column="initDate" property="initDate"/>
		<result column="ctime" property="ctime"/>
		<result column="etime" property="etime"/>
		<result column="receivableType" property="receivableType"/>
		<result column="isClaimed" property="isClaimed"/>
		<association column="customerId" property="customer" select="com.zoo.mapper.crm.customer.CustomerMapper.getCustomerById"></association>
		<association column="cuserId" property="cuser" select="com.zoo.mapper.system.user.SystemUserMapper.getUserById"></association>
		<association column="receivingId" property="receiving" select="com.zoo.mapper.crm.customer.ReceivingMapper.getReceivingById"></association>
		<collection column="id" property="details" select="com.zoo.mapper.erp.sell.SellDetailMapper.getDetailBySellId"></collection>
		<collection column="id" property="annexs" select="com.zoo.mapper.annex.AnnexMapper.getAnnexsByForeignKey"></collection>
		
	</resultMap>
	<select id="getSellByPage" resultMap="BaseResultMap">
		select DISTINCT
			s.* 
		from 
			sell s left join sell_detail sd on sd.sellId = s.id 
					left join product p on sd.productId = p.id
					left join customer c on s.customerId = c.id
		where s.companyId=#{companyId}
		<if test="keywords!=null and keywords!=''">
			AND (s.code like concat('%',#{keywords},'%') or p.code like concat('%',#{keywords},'%') or p.name like concat('%',#{keywords},'%') or c.name like concat('%',#{keywords},'%'))
		</if>
		<if test="code!=null and code!=''">
			AND s.code like concat('%',#{code},'%')
		</if>
		<if test="productCode!=null and productCode!=''">
			AND p.code like concat('%',#{productCode},'%')
		</if>
		<if test="productName!=null and productName!=''">
			AND p.name like concat('%',#{productName},'%')
		</if>
		<if test="customerName!=null and customerName!=''">
			AND c.name like concat('%',#{customerName},'%')
		</if>
		<if test="start_initDate!=null and start_initDate!=''">
			AND s.initDate <![CDATA[ >= ]]> #{start_initDate}
		</if>
		<if test="end_initDate!=null and end_initDate!=''">
			AND s.initDate <![CDATA[ <= ]]> #{end_initDate}
		</if>
		<if test="start_ctime!=null and start_ctime!=''">
			AND s.ctime <![CDATA[ >= ]]> #{start_ctime}
		</if>
		<if test="end_ctime!=null and end_ctime!=''">
			AND s.ctime <![CDATA[ <= ]]> #{end_ctime}
		</if>
		<if test="status!=null and status.length>0">
			AND s.status in 
			<foreach collection="status" separator="," open="(" close=")" item="status">
            	#{status}
        	</foreach>
		</if>
		<if test="cuserId!=null and cuserId!=''">
			AND s.cuserId = #{cuserId}
		</if>
		ORDER BY ${sort} ${order}
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>
	<select id="getCount" resultType="long">
		select 
			count(DISTINCT s.id) 
		from 
			sell s left join sell_detail sd on sd.sellId = s.id 
					left join product p on sd.productId = p.id
					left join customer c on s.customerId = c.id
		where s.companyId=#{companyId}
		<if test="keywords!=null and keywords!=''">
			AND (s.code like concat('%',#{keywords},'%') or p.code like concat('%',#{keywords},'%') or p.name like concat('%',#{keywords},'%') or c.name like concat('%',#{keywords},'%'))
		</if>
		<if test="code!=null and code!=''">
			AND s.code like concat('%',#{code},'%')
		</if>
		<if test="productCode!=null and productCode!=''">
			AND p.code like concat('%',#{productCode},'%')
		</if>
		<if test="productName!=null and productName!=''">
			AND p.name like concat('%',#{productName},'%')
		</if>
		<if test="customerName!=null and customerName!=''">
			AND c.name like concat('%',#{customerName},'%')
		</if>
		<if test="start_initDate!=null and start_initDate!=''">
			AND s.initDate <![CDATA[ >= ]]> #{start_initDate}
		</if>
		<if test="end_initDate!=null and end_initDate!=''">
			AND s.initDate <![CDATA[ <= ]]> #{end_initDate}
		</if>
		<if test="start_ctime!=null and start_ctime!=''">
			AND s.ctime <![CDATA[ >= ]]> #{start_ctime}
		</if>
		<if test="end_ctime!=null and end_ctime!=''">
			AND s.ctime <![CDATA[ <= ]]> #{end_ctime}
		</if>
		<if test="status!=null and status.length>0">
			AND s.status in 
			<foreach collection="status" separator="," open="(" close=")" item="status">
            	#{status}
        	</foreach>
		</if>
		<if test="cuserId!=null and cuserId!=''">
			AND s.cuserId = #{cuserId}
		</if>
	</select>
	<select id="getSellById" resultMap="BaseResultMap">
	
		select * from sell where id=#{id}
	</select>
	<insert id="addSell">
		insert into sell (
			id,
			initDate,
			code,
			customerId,
			cuserId,
			ctime,
			etime,
			processInstanceId,
			status,
			companyId,
			receivingId,
			receivingContext,
			receivableType,
			freightType,
			description
		)values(
			#{sell.id},
			#{sell.initDate},
			#{sell.code},
			#{sell.customer.id},
			#{sell.cuserId},
			#{sell.ctime},
			#{sell.etime},
			#{sell.processInstanceId},
			#{sell.status},
			#{sell.companyId},
			#{sell.receiving.id},
			#{sell.receivingContext},
			#{sell.receivableType},
			#{sell.freightType},
			#{sell.description}
		)
	</insert>
	<update id="updateSell">
		update sell set 
		initDate=#{sell.initDate},
		customerId=#{sell.customer.id},
		receivingId=#{sell.receiving.id},
		receivingContext=#{sell.receivingContext},
		receivableType=#{sell.receivableType},
		freightType = #{sell.freightType},
		description = #{sell.description}
		where id=#{sell.id}	
	</update>
	<update id="updateProcessInstanceId">
		update sell set processInstanceId=#{processInstanceId} where id=#{id}
	</update>
	<update id="updateSellStatus">
		UPDATE 
			sell 
		SET 
			status = #{condition.status} 
			<if test="condition.isClaimed!=null">
			,isClaimed = #{condition.isClaimed} 
			</if>
			<if test="condition.etime!=null">
				,etime = #{condition.etime} 
			</if> 
			 
		WHERE id = #{condition.id}
	</update>
	<delete id="deleteSellById">
		delete from sell where id in 
		<foreach collection="ids" separator="," open="(" close=")" item="id">
            #{id}
        </foreach>
	</delete>
	<update id="updateSellIsClaimed">
		update sell set isClaimed = #{condition.isClaimed} where id = #{condition.id} 
	</update>
</mapper>