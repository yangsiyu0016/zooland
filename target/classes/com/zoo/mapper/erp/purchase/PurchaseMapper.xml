<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zoo.mapper.erp.purchase.PurchaseMapper">
	<resultMap type="com.zoo.model.erp.purchase.Purchase" id="BaseResultMap">
		<id column="id" property="id"/>
		<result column="code" property="code"/>
		<result column="initDate" property="initDate"/>
		<result column="ctime" property="ctime"/>
		<result column="etime" property="etime"/>
		<association column="customerId" property="customer" select="com.zoo.mapper.crm.customer.CustomerMapper.getCustomerById"></association>
		<association column="cuserId" property="cuser" select="com.zoo.mapper.system.user.SystemUserMapper.getUserById"></association>
		<association column="accountId" property="account" select="com.zoo.mapper.crm.customer.AccountMapper.getAccountById"></association>
		<collection column="id" property="details" select="com.zoo.mapper.erp.purchase.PurchaseDetailMapper.getDetailByPurchaseId"></collection>
	</resultMap>
	<select id="getPurchaseByPage" resultMap="BaseResultMap">
		select * from purchase where companyId=#{companyId}
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>
	<select id="getCount" resultType="long">
		select count(*) from purchase where companyId=#{companyId}
	</select>
	<select id="getPurchaseById" resultMap="BaseResultMap">
	
		select * from purchase where id=#{id}
	</select>
	<insert id="addPurchase">
		insert into purchase (
			id,
			initDate,
			code,
			customerId,
			cuserId,
			ctime,
			etime,
			processInstanceId,
			status,
			companyId,
			accountId
		)values(
			#{purchase.id},
			#{purchase.initDate},
			#{purchase.code},
			#{purchase.customer.id},
			#{purchase.cuserId},
			#{purchase.ctime},
			#{purchase.etime},
			#{purchase.processInstanceId},
			#{purchase.status},
			#{purchase.companyId},
			#{purchase.account.id}
		)
	</insert>
	<update id="updateProcessInstanceId">
		update purchase set processInstanceId=#{processInstanceId} where id=#{id}
	</update>
	<update id="updatePurchaseStatus">
		UPDATE 
			purchase 
		SET 
			status = #{condition.status} 
			<if test="condition.etime!=null">
				,etime = #{condition.etime} 
			</if> 
			 
		WHERE id = #{condition.id}
	</update>
	<delete id="deletePurchaseById">
		delete from sell where id in 
		<foreach collection="ids" separator="," open="(" close=")" item="id">
            #{id}
        </foreach>
	</delete>
</mapper>