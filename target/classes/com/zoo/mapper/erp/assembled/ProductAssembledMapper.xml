<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zoo.mapper.erp.assembled.ProductAssembledMapper">
	<resultMap type="com.zoo.model.erp.assembled.ProductAssembled" id="BaseResultMap">
		<id column="id" property="id"/>
		<result column="assembledTime" property="assembledTime"/>
		<result column="number" property="number"/>
		<result column="code" property="code"/>
		<result column="ctime" property="ctime"/>
		<result column="etime" property="etime"/>
		<result column="companyId" property="companyId"/>
		<result column="status" property="status"/>
		<result column="isClaimed" property="isClaimed"/>
		<result column="processInstanceId" property="processInstanceId"/>
		<result column="notInNumber" property="notInNumber"/>
		<association column="warehouseId" property="warehouse" select="com.zoo.mapper.erp.warehouse.WarehouseMapper.getWarehouseById"></association>
		<association column="productId" property="product" select="com.zoo.mapper.erp.product.ProductMapper.getProductById"></association>
		<association column="cuserId" property="cuser" select="com.zoo.mapper.system.user.SystemUserMapper.getUserById"></association>
		<collection column="id" property="materials" select="com.zoo.mapper.erp.assembled.ProductAssembledMaterialMapper.getMaterialByAssembledId"></collection>
	</resultMap>
	<select id="getProductAssembledByPage" resultMap="BaseResultMap">
		select 
			pa.* 
		from product_assembled pa left join product p on pa.productId=p.id 
								
		where pa.companyId=#{companyId}
		<if test="keywords!=null and keywords!=''">
			AND  (pa.code like concat('%',#{keywords},'%') or p.name like concat('%',#{keywords},'%') or p.code like concat('%',#{keywords},'%'))
		</if>
		<if test="code!=null and code!=''">
			AND pa.code like concat('%',#{code},'%')
		</if>
		<if test="productCode!=null and productCode!=''">
			AND p.code like concat('%',#{productCode},'%')
		</if>
		<if test="productName!=null and productName!=''">
			AND p.name like concat('%',#{productName},'%')
		</if>
		<if test="warehouseId!=null and warehouseId!=''">
			AND pa.warehouseId =#{warehouseId}
		</if>
		<if test="status!=null and status!=''">
			AND pa.status =#{status}
		</if>
		<if test="start_assembledTime!=null and start_assembledTime!=''">
			AND pa.assembledTime <![CDATA[ >= ]]> #{start_assembledTime}
		</if>
		<if test="end_assembledTime!=null and end_assembledTime!=''">
			AND pa.assembledTime <![CDATA[ <= ]]> #{end_assembledTime}
		</if>
		<if test="start_ctime!=null and start_ctime!=''">
			AND pa.ctime <![CDATA[ >= ]]> #{start_ctime}
		</if>
		<if test="end_ctime!=null and end_ctime!=''">
			AND pa.ctime <![CDATA[ <= ]]> #{end_ctime}
		</if>
		order by ${sort} ${order}
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>
	<select id="getCount" resultType="long">
		select 
			count(*) 
		from 
			product_assembled pa 
		left join product p on pa.productId=p.id 
		where pa.companyId=#{companyId}
		<if test="keywords!=null and keywords!=''">
			AND  (pa.code like concat('%',#{keywords},'%') or p.name like concat('%',#{keywords},'%') or p.code like concat('%',#{keywords},'%'))
		</if>
		<if test="code!=null and code!=''">
			AND pa.code like concat('%',#{code},'%')
		</if>
		<if test="productCode!=null and productCode!=''">
			AND p.code like concat('%',#{productCode},'%')
		</if>
		<if test="productName!=null and productName!=''">
			AND p.name like concat('%',#{productName},'%')
		</if>
		<if test="warehouseId!=null and warehouseId!=''">
			AND pa.warehouseId =#{warehouseId}
		</if>
		<if test="status!=null and status!=''">
			AND pa.status =#{status}
		</if>
		<if test="start_assembledTime!=null and start_assembledTime!=''">
			AND pa.assembledTime <![CDATA[ >= ]]> #{start_assembledTime}
		</if>
		<if test="end_assembledTime!=null and end_assembledTime!=''">
			AND pa.assembledTime <![CDATA[ <= ]]> #{end_assembledTime}
		</if>
		<if test="start_ctime!=null and start_ctime!=''">
			AND pa.ctime <![CDATA[ >= ]]> #{start_ctime}
		</if>
		<if test="end_ctime!=null and end_ctime!=''">
			AND pa.ctime<![CDATA[ <= ]]> #{end_ctime}
		</if>
	</select>
	<select id="getProductAssembledById" resultMap="BaseResultMap">
		select * from product_assembled where id=#{id}
	</select>
	<insert id="addProductAssembled">
		insert into product_assembled (
			id,
			code,
			assembledTime,
			number,
			ctime,
			companyId,
			warehouseId,
			productId,
			cuserId,
			status,
			notInNumber
		) values(
			#{pa.id},
			#{pa.code},
			#{pa.assembledTime},
			#{pa.number},
			#{pa.ctime},
			#{pa.companyId},
			#{pa.warehouse.id},
			#{pa.product.id},
			#{pa.cuserId},
			#{pa.status},
			#{pa.notInNumber}
		)
	</insert>
	<update id="updateProductAssembled">
		update product_assembled 
		set 
			assembledTime=#{pa.assembledTime},
			number=#{pa.number},
			warehouseId=#{pa.warehouse.id},
			productId=#{pa.product.id},
			description=#{pa.description},
			notInNumber=#{pa.notInNumber}
		where id=#{pa.id}
	</update>
	<update id="updateProcessInstanceId">
		update product_assembled set processInstanceId=#{processInstanceId} where id=#{id}
	</update>
	<update id="updateProductAssembledStatus">
		UPDATE 
			product_assembled 
		SET 
			status = #{condition.status} 
			<if test="condition.isClaimed!=null">
			,isClaimed = #{condition.isClaimed} 
			</if>
			<if test="condition.etime!=null">
				,etime = #{condition.etime} 
			</if> 
			 
		WHERE id = #{condition.id}
	</update>
	<update id="updateNotInNumber">
		update product_assembled set 
			notInNumber = #{notInNumber} 
		where 
			id = #{id}
	</update>
	<delete id="deleteProductAssembledById">
		delete from product_assembled where id in 
		<foreach collection="ids" separator="," open="(" close=")" item="id">
            #{id}
        </foreach>
	</delete>
</mapper>