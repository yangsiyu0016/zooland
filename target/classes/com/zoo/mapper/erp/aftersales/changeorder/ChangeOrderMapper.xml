<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zoo.mapper.erp.aftersales.changeorder.ChangeOrderMapper">

	<resultMap type="com.zoo.model.erp.aftersales.changeorder.ChangeOrder" id="BaseResultMap">
		<id column="id" property="id"/>
		<result column="code" property="code"/>
		<result column="initDate" property="initDate"/>
		<result column="processInstanceId" property="processInstanceId"/>
		<result column="status" property="status"/>
		<result column="ctime" property="ctime"/>
		<result column="etime" property="etime"/>
		<result column="isClaimed" property="isClaimed"/>
		<result column="reason" property="reason"/>
		<result column="problemDescription" property="problemDescription"/>
		<association column="supplierId" property="supplier" select="com.zoo.mapper.erp.purchase.SupplierMapper.getSupplierById"></association>
		<association column="cuserId" property="cuser" select="com.zoo.mapper.system.user.SystemUserMapper.getUserById"></association>
		<association column="customerId" property="customer" select="com.zoo.mapper.crm.customer.CustomerMapper.getCustomerById"></association>
		<association column="expressId" property="express" select="com.zoo.mapper.system.base.ExpressMapper.getExpressById"></association>
		<collection column="id" property="details" select="com.zoo.mapper.erp.aftersales.changeorder.ChangeOrderDetailMapper.getDetailByChangeOrderId"></collection>
	</resultMap>
	
	<select id="getChangeOrderByPage" resultMap="BaseResultMap">
		select * from change_order where companyId = #{companyId}
		<if test="start != null and size != null">
			limit #{start} , #{size}
		</if>
	</select>
	
	<select id="getCount" resultType="long">
		select count(*) from change_order where companyId=#{companyId}
	</select>
	
	<select id="getChangeOrderById" resultMap="BaseResultMap">
	
		select * from change_order where id=#{id}
	</select>
	
	<insert id="addChangeOrder">
		insert into change_order (
			id,
			code,
			initDate,
			processInstanceId,
			status,
			ctime,
			etime,
			supplierId,
			customerId,
			cuserId,
			companyId,
			isClaimed,
			reason,
			problemDescription,
			expressId
		) values(
			#{changeOrder.id},
			#{changeOrder.code},
			#{changeOrder.initDate},
			#{changeOrder.processInstanceId},
			#{changeOrder.status},
			#{changeOrder.ctime},
			#{changeOrder.etime},
			#{changeOrder.supplier.id},
			#{changeOrder.customer.id},
			#{changeOrder.cuserId},
			#{changeOrder.companyId},
			#{changeOrder.isClaimed},
			#{changeOrder.reason},
			#{changeOrder.problemDescription},
			#{changeOrder.express.id}
		)
	</insert>
	
	<update id="updateChangeOrder">
		update change_order set 
			initDate=#{changeOrder.initDate},
			supplierId=#{changeOrder.supplier.id},
			customerId=#{changeOrder.customer.id},
			reason=#{changeOrder.reason},
			problemDescription=#{changeOrder.problemDescription},
			expressId=#{changeOrder.express.id}
		where id = #{changeOrder.id}
	</update>
	
	<update id="updateProcessInstanceId">
		update change_order set processInstanceId=#{processInstanceId} where id=#{id}
	</update>
	
	<update id="updateChangeOrderStatus">
		UPDATE 
			change_order 
		SET 
			status = #{condition.status} 
			<if test="condition.isClaimed!=null">
				,isClaimed = #{condition.isClaimed} 
			</if>
			<if test="condition.etime!=null">
				,etime = #{condition.etime} 
			</if> 
			 
		WHERE id = #{condition.id}
	</update>
	
	<update id="updateChangeOrderIsClaimed">
		update change_order set isClaimed = #{condition.isClaimed} where id = #{condition.id} 
	</update>
	
	<delete id="deleteChangeOrderById">
		delete from change_order where id in 
		<foreach collection="ids" separator="," open="(" close=")" item="id">
            #{id}
        </foreach>
	</delete>
	
</mapper>